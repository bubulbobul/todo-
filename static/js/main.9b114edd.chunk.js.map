{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","headerStyle","react_router_dom","linkStyle","to","background","color","textAlign","padding","textDecoration","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","checkedInput","bind","btnStyle","onClick","deleteTodo","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","React","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","handleTitle","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","uuid","v4","data","_this2","get","_this3","basename","process","react_router","exact","path","render","routerProps","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b114edd.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">Home</Link> | {' '} \n      <Link style={linkStyle} to=\"/about\">About</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px'\n}\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type='checkbox'\n            onChange={this.props.checkedInput.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button\n            style={btnStyle}\n            onClick={this.props.deleteTodo.bind(this, id)}\n          >\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  checkedInput: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 8px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends React.Component {\n\n  render() {\n    const todos = this.props.todos;\n    // // console.log(todos)\n    return (\n      todos.map(todo => (\n        <TodoItem \n          key={todo.id} \n          todo={todo}\n          checkedInput={this.props.checkedInput}\n          deleteTodo={this.props.deleteTodo}\n        />\n      ))\n    );\n  }\n}\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  checkedInput: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class AddTodo extends Component {\n    state = {\n        title: ''\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({\n            title: ''\n        })\n    }\n\n    handleTitle = (e) => this.setState({\n        [e.target.name]: e.target.value\n    });\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input \n            type=\"text\" \n            name=\"title\" \n            style={{flex: '10', padding: '5px'}}\n            placeholder=\"Add Todo ...\"\n            value={this.state.title}\n            onChange={this.handleTitle}\n            />\n        <input \n            type=\"submit\" \n            value=\"submit\"\n            className=\"btn\" \n            style={{flex: '1'}}/>\n      </form>\n    )\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n}\n\nexport default AddTodo\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: \"center\" }}>\n        This is the basic TodoList app v1.0.0\n      </h1>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport uuid from \"uuid\";\n\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n// import { V4MAPPED } from \"dns\";\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\")\n      // axios.get('http://localhost:4000/results?_limit=10')\n      .then(res =>\n        // // console.log(res.data)\n        this.setState({ todos: res.data })\n      );\n  }\n\n  // Toggle check box todo (completed)\n  checkedInput = id => {\n    // // console.log(id)\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  deleteTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n\n    // this.setState({\n    // //   todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    // });\n  };\n\n  addTodo = title => {\n    // // console.log(title)\n    // const newTodo = {\n    //   id:uuid.v4(),\n    //   title: title,\n    //   completed: false\n    // }\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      })\n      .then(res =>\n        this.setState({\n          todos: [res.data, ...this.state.todos]\n        })\n      );\n    // // this.setState({ todos: [...this.state.todos, newTodo]})\n  };\n\n  render() {\n    // // console.log(this.state.todos);\n    return (\n      <Router basename={`${process.env.PUBLIC_URL}`}>\n        <div className='App'>\n          <div className='container'>\n            <Header />\n            <Route\n              exact\n              path='/'\n              render={routerProps => (\n                <React.Fragment>\n                  <AddTodo routerProps={routerProps} addTodo={this.addTodo} />\n                  <Todos\n                    routerProps={routerProps}\n                    todos={this.state.todos}\n                    checkedInput={this.checkedInput}\n                    deleteTodo={this.deleteTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}